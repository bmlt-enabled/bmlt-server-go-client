/*
BMLT

BMLT Admin API Documentation

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bmlt

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RootServerBaseStatisticsServiceBodies type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RootServerBaseStatisticsServiceBodies{}

// RootServerBaseStatisticsServiceBodies struct for RootServerBaseStatisticsServiceBodies
type RootServerBaseStatisticsServiceBodies struct {
	NumZones int32 `json:"numZones"`
	NumRegions int32 `json:"numRegions"`
	NumAreas int32 `json:"numAreas"`
	NumGroups int32 `json:"numGroups"`
}

type _RootServerBaseStatisticsServiceBodies RootServerBaseStatisticsServiceBodies

// NewRootServerBaseStatisticsServiceBodies instantiates a new RootServerBaseStatisticsServiceBodies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRootServerBaseStatisticsServiceBodies(numZones int32, numRegions int32, numAreas int32, numGroups int32) *RootServerBaseStatisticsServiceBodies {
	this := RootServerBaseStatisticsServiceBodies{}
	this.NumZones = numZones
	this.NumRegions = numRegions
	this.NumAreas = numAreas
	this.NumGroups = numGroups
	return &this
}

// NewRootServerBaseStatisticsServiceBodiesWithDefaults instantiates a new RootServerBaseStatisticsServiceBodies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRootServerBaseStatisticsServiceBodiesWithDefaults() *RootServerBaseStatisticsServiceBodies {
	this := RootServerBaseStatisticsServiceBodies{}
	return &this
}

// GetNumZones returns the NumZones field value
func (o *RootServerBaseStatisticsServiceBodies) GetNumZones() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumZones
}

// GetNumZonesOk returns a tuple with the NumZones field value
// and a boolean to check if the value has been set.
func (o *RootServerBaseStatisticsServiceBodies) GetNumZonesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumZones, true
}

// SetNumZones sets field value
func (o *RootServerBaseStatisticsServiceBodies) SetNumZones(v int32) {
	o.NumZones = v
}

// GetNumRegions returns the NumRegions field value
func (o *RootServerBaseStatisticsServiceBodies) GetNumRegions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumRegions
}

// GetNumRegionsOk returns a tuple with the NumRegions field value
// and a boolean to check if the value has been set.
func (o *RootServerBaseStatisticsServiceBodies) GetNumRegionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumRegions, true
}

// SetNumRegions sets field value
func (o *RootServerBaseStatisticsServiceBodies) SetNumRegions(v int32) {
	o.NumRegions = v
}

// GetNumAreas returns the NumAreas field value
func (o *RootServerBaseStatisticsServiceBodies) GetNumAreas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumAreas
}

// GetNumAreasOk returns a tuple with the NumAreas field value
// and a boolean to check if the value has been set.
func (o *RootServerBaseStatisticsServiceBodies) GetNumAreasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumAreas, true
}

// SetNumAreas sets field value
func (o *RootServerBaseStatisticsServiceBodies) SetNumAreas(v int32) {
	o.NumAreas = v
}

// GetNumGroups returns the NumGroups field value
func (o *RootServerBaseStatisticsServiceBodies) GetNumGroups() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumGroups
}

// GetNumGroupsOk returns a tuple with the NumGroups field value
// and a boolean to check if the value has been set.
func (o *RootServerBaseStatisticsServiceBodies) GetNumGroupsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumGroups, true
}

// SetNumGroups sets field value
func (o *RootServerBaseStatisticsServiceBodies) SetNumGroups(v int32) {
	o.NumGroups = v
}

func (o RootServerBaseStatisticsServiceBodies) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RootServerBaseStatisticsServiceBodies) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["numZones"] = o.NumZones
	toSerialize["numRegions"] = o.NumRegions
	toSerialize["numAreas"] = o.NumAreas
	toSerialize["numGroups"] = o.NumGroups
	return toSerialize, nil
}

func (o *RootServerBaseStatisticsServiceBodies) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"numZones",
		"numRegions",
		"numAreas",
		"numGroups",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRootServerBaseStatisticsServiceBodies := _RootServerBaseStatisticsServiceBodies{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRootServerBaseStatisticsServiceBodies)

	if err != nil {
		return err
	}

	*o = RootServerBaseStatisticsServiceBodies(varRootServerBaseStatisticsServiceBodies)

	return err
}

type NullableRootServerBaseStatisticsServiceBodies struct {
	value *RootServerBaseStatisticsServiceBodies
	isSet bool
}

func (v NullableRootServerBaseStatisticsServiceBodies) Get() *RootServerBaseStatisticsServiceBodies {
	return v.value
}

func (v *NullableRootServerBaseStatisticsServiceBodies) Set(val *RootServerBaseStatisticsServiceBodies) {
	v.value = val
	v.isSet = true
}

func (v NullableRootServerBaseStatisticsServiceBodies) IsSet() bool {
	return v.isSet
}

func (v *NullableRootServerBaseStatisticsServiceBodies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRootServerBaseStatisticsServiceBodies(val *RootServerBaseStatisticsServiceBodies) *NullableRootServerBaseStatisticsServiceBodies {
	return &NullableRootServerBaseStatisticsServiceBodies{value: val, isSet: true}
}

func (v NullableRootServerBaseStatisticsServiceBodies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRootServerBaseStatisticsServiceBodies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


