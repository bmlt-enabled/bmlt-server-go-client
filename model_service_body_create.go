/*
BMLT

BMLT Admin API Documentation

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package bmlt

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ServiceBodyCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceBodyCreate{}

// ServiceBodyCreate struct for ServiceBodyCreate
type ServiceBodyCreate struct {
	ParentId NullableInt32 `json:"parentId"`
	Name string `json:"name"`
	Description string `json:"description"`
	Type string `json:"type"`
	AdminUserId int32 `json:"adminUserId"`
	AssignedUserIds []int32 `json:"assignedUserIds"`
	Url *string `json:"url,omitempty"`
	Helpline *string `json:"helpline,omitempty"`
	Email *string `json:"email,omitempty"`
	WorldId *string `json:"worldId,omitempty"`
}

type _ServiceBodyCreate ServiceBodyCreate

// NewServiceBodyCreate instantiates a new ServiceBodyCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceBodyCreate(parentId NullableInt32, name string, description string, type_ string, adminUserId int32, assignedUserIds []int32) *ServiceBodyCreate {
	this := ServiceBodyCreate{}
	this.ParentId = parentId
	this.Name = name
	this.Description = description
	this.Type = type_
	this.AdminUserId = adminUserId
	this.AssignedUserIds = assignedUserIds
	return &this
}

// NewServiceBodyCreateWithDefaults instantiates a new ServiceBodyCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceBodyCreateWithDefaults() *ServiceBodyCreate {
	this := ServiceBodyCreate{}
	return &this
}

// GetParentId returns the ParentId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *ServiceBodyCreate) GetParentId() int32 {
	if o == nil || o.ParentId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.ParentId.Get()
}

// GetParentIdOk returns a tuple with the ParentId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceBodyCreate) GetParentIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParentId.Get(), o.ParentId.IsSet()
}

// SetParentId sets field value
func (o *ServiceBodyCreate) SetParentId(v int32) {
	o.ParentId.Set(&v)
}

// GetName returns the Name field value
func (o *ServiceBodyCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ServiceBodyCreate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ServiceBodyCreate) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *ServiceBodyCreate) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *ServiceBodyCreate) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *ServiceBodyCreate) SetDescription(v string) {
	o.Description = v
}

// GetType returns the Type field value
func (o *ServiceBodyCreate) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ServiceBodyCreate) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ServiceBodyCreate) SetType(v string) {
	o.Type = v
}

// GetAdminUserId returns the AdminUserId field value
func (o *ServiceBodyCreate) GetAdminUserId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AdminUserId
}

// GetAdminUserIdOk returns a tuple with the AdminUserId field value
// and a boolean to check if the value has been set.
func (o *ServiceBodyCreate) GetAdminUserIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdminUserId, true
}

// SetAdminUserId sets field value
func (o *ServiceBodyCreate) SetAdminUserId(v int32) {
	o.AdminUserId = v
}

// GetAssignedUserIds returns the AssignedUserIds field value
func (o *ServiceBodyCreate) GetAssignedUserIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.AssignedUserIds
}

// GetAssignedUserIdsOk returns a tuple with the AssignedUserIds field value
// and a boolean to check if the value has been set.
func (o *ServiceBodyCreate) GetAssignedUserIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AssignedUserIds, true
}

// SetAssignedUserIds sets field value
func (o *ServiceBodyCreate) SetAssignedUserIds(v []int32) {
	o.AssignedUserIds = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ServiceBodyCreate) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBodyCreate) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ServiceBodyCreate) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ServiceBodyCreate) SetUrl(v string) {
	o.Url = &v
}

// GetHelpline returns the Helpline field value if set, zero value otherwise.
func (o *ServiceBodyCreate) GetHelpline() string {
	if o == nil || IsNil(o.Helpline) {
		var ret string
		return ret
	}
	return *o.Helpline
}

// GetHelplineOk returns a tuple with the Helpline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBodyCreate) GetHelplineOk() (*string, bool) {
	if o == nil || IsNil(o.Helpline) {
		return nil, false
	}
	return o.Helpline, true
}

// HasHelpline returns a boolean if a field has been set.
func (o *ServiceBodyCreate) HasHelpline() bool {
	if o != nil && !IsNil(o.Helpline) {
		return true
	}

	return false
}

// SetHelpline gets a reference to the given string and assigns it to the Helpline field.
func (o *ServiceBodyCreate) SetHelpline(v string) {
	o.Helpline = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *ServiceBodyCreate) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBodyCreate) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *ServiceBodyCreate) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *ServiceBodyCreate) SetEmail(v string) {
	o.Email = &v
}

// GetWorldId returns the WorldId field value if set, zero value otherwise.
func (o *ServiceBodyCreate) GetWorldId() string {
	if o == nil || IsNil(o.WorldId) {
		var ret string
		return ret
	}
	return *o.WorldId
}

// GetWorldIdOk returns a tuple with the WorldId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceBodyCreate) GetWorldIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorldId) {
		return nil, false
	}
	return o.WorldId, true
}

// HasWorldId returns a boolean if a field has been set.
func (o *ServiceBodyCreate) HasWorldId() bool {
	if o != nil && !IsNil(o.WorldId) {
		return true
	}

	return false
}

// SetWorldId gets a reference to the given string and assigns it to the WorldId field.
func (o *ServiceBodyCreate) SetWorldId(v string) {
	o.WorldId = &v
}

func (o ServiceBodyCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceBodyCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["parentId"] = o.ParentId.Get()
	toSerialize["name"] = o.Name
	toSerialize["description"] = o.Description
	toSerialize["type"] = o.Type
	toSerialize["adminUserId"] = o.AdminUserId
	toSerialize["assignedUserIds"] = o.AssignedUserIds
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.Helpline) {
		toSerialize["helpline"] = o.Helpline
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.WorldId) {
		toSerialize["worldId"] = o.WorldId
	}
	return toSerialize, nil
}

func (o *ServiceBodyCreate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"parentId",
		"name",
		"description",
		"type",
		"adminUserId",
		"assignedUserIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServiceBodyCreate := _ServiceBodyCreate{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varServiceBodyCreate)

	if err != nil {
		return err
	}

	*o = ServiceBodyCreate(varServiceBodyCreate)

	return err
}

type NullableServiceBodyCreate struct {
	value *ServiceBodyCreate
	isSet bool
}

func (v NullableServiceBodyCreate) Get() *ServiceBodyCreate {
	return v.value
}

func (v *NullableServiceBodyCreate) Set(val *ServiceBodyCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceBodyCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceBodyCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceBodyCreate(val *ServiceBodyCreate) *NullableServiceBodyCreate {
	return &NullableServiceBodyCreate{value: val, isSet: true}
}

func (v NullableServiceBodyCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceBodyCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


